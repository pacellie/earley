% Isabelle

@Book{Nipkow:2002,
  author	= {Tobias Nipkow and Lawrence C. Paulson and Markus Wenzel},
  title		= {Isabelle/HOL --- A Proof Assistant for Higher-Order Logic},
  publisher	= {Springer},
  series	= {LNCS},
  volume	= 2283,
  year		= 2002}

% Main Sources

@inproceedings{Jones:1972,
author = {Jones, C B},
title = {Formal Development of Correct Algorithms: An Example Based on Earley's Recogniser},
year = {1972},
isbn = {9781450378918},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800235.807083},
doi = {10.1145/800235.807083},
booktitle = {Proceedings of ACM Conference on Proving Assertions about Programs},
pages = {150–169},
numpages = {20},
location = {Las Cruces, New Mexico, USA}
}

@article{Earley:1970,
author = {Earley, Jay},
title = {An Efficient Context-Free Parsing Algorithm},
year = {1970},
issue_date = {Feb 1970},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {2},
issn = {0001-0782},
url = {https://doi.org/10.1145/362007.362035},
doi = {10.1145/362007.362035},
journal = {Commun. ACM},
month = {feb},
pages = {94–102},
numpages = {9},
keywords = {computational complexity, parsing, syntax analysis, context-free grammar, compilers}
}

@article{Scott:2008,
title = {SPPF-Style Parsing From Earley Recognisers},
journal = {Electronic Notes in Theoretical Computer Science},
volume = {203},
number = {2},
pages = {53-67},
year = {2008},
note = {Proceedings of the Seventh Workshop on Language Descriptions, Tools, and Applications (LDTA 2007)},
issn = {1571-0661},
doi = {https://doi.org/10.1016/j.entcs.2008.03.044},
url = {https://www.sciencedirect.com/science/article/pii/S1571066108001497},
author = {Elizabeth Scott},
keywords = {Earley parsing, cubic generalised parsing, context free languages},
}

@article{Aycock:2002,
author = {Aycock, John and Horspool, R.},
year = {2002},
month = {06},
pages = {620-630},
title = {Practical Earley Parsing},
volume = {45},
journal = {Comput. J.},
doi = {10.1093/comjnl/45.6.620}
}

@book{Aho:1972,
author = {Aho, Alfred V. and Ullman, Jeffrey D.},
title = {The Theory of Parsing, Translation, and Compiling},
year = {1972},
isbn = {0139145567},
publisher = {Prentice-Hall, Inc.},
address = {USA},
}

@book{Appel:2003,
author = {Appel, Andrew W. and Palsberg, Jens},
title = {Modern Compiler Implementation in Java},
year = {2003},
isbn = {052182060X},
publisher = {Cambridge University Press},
address = {USA},
edition = {2nd},
}

@book{Fischer:2009,
author = {Fischer, Charles N. and Cytron, Ronald K. and LeBlanc, Richard J.},
title = {Crafting A Compiler},
year = {2009},
isbn = {0136067050},
publisher = {Addison-Wesley Publishing Company},
address = {USA},
edition = {1st},
}

@InProceedings{McLean:1996,
author="McLean, Philippe
and Horspool, R. Nigel",
editor="Gyim{\'o}thy, Tibor",
title="A faster Earley parser",
booktitle="Compiler Construction",
year="1996",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="281--293",
isbn="978-3-540-49939-8"
}

@article{Younger:1967,
title = {Recognition and parsing of context-free languages in time n3},
journal = {Information and Control},
volume = {10},
number = {2},
pages = {189-208},
year = {1967},
issn = {0019-9958},
doi = {https://doi.org/10.1016/S0019-9958(67)80007-X},
url = {https://www.sciencedirect.com/science/article/pii/S001999586780007X},
author = {Daniel H. Younger},
}

@book{Tomita:1985,
author = {Tomita, Masaru},
title = {Efficient Parsing for Natural Language: A Fast Algorithm for Practical Systems},
year = {1985},
isbn = {0898382025},
publisher = {Kluwer Academic Publishers},
address = {USA}
}

@book{Hopcroft:2006,
author = {Hopcroft, John E. and Motwani, Rajeev and Ullman, Jeffrey D.},
title = {Introduction to Automata Theory, Languages, and Computation (3rd Edition)},
year = {2006},
isbn = {0321455363},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA}
}

@Inbook{Johnson:1991,
author="Johnson, Mark",
title="The Computational Complexity of GLR Parsing",
bookTitle="Generalized LR Parsing",
year="1991",
publisher="Springer US",
address="Boston, MA",
pages="35--42",
isbn="978-1-4615-4034-2",
doi="10.1007/978-1-4615-4034-2_3",
url="https://doi.org/10.1007/978-1-4615-4034-2_3"
}



% Related Work

@article{Tomita:1987,
author = {Tomita, Masaru},
title = {An Efficient Augmented-Context-Free Parsing Algorithm},
year = {1987},
issue_date = {January-June 1987},
publisher = {MIT Press},
address = {Cambridge, MA, USA},
volume = {13},
number = {1–2},
issn = {0891-2017},
journal = {Comput. Linguist.},
month = {jan},
pages = {31–46},
numpages = {16}
}

@inproceedings{Izmaylova:2016,
author = {Izmaylova, Anastasia and Afroozeh, Ali and Storm, Tijs van der},
title = {Practical, General Parser Combinators},
year = {2016},
isbn = {9781450340977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2847538.2847539},
doi = {10.1145/2847538.2847539},
pages = {1–12},
numpages = {12},
location = {St. Petersburg, FL, USA},
series = {PEPM '16}
}

@InProceedings{Lasser:2019,
  author =	{Sam Lasser and Chris Casinghino and Kathleen Fisher and Cody Roux},
  title =	{{A Verified LL(1) Parser Generator}},
  booktitle =	{10th International Conference on Interactive Theorem Proving (ITP 2019)},
  pages =	{24:1--24:18},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-122-1},
  ISSN =	{1868-8969},
  year =	{2019},
  volume =	{141},
  editor =	{John Harrison and John O'Leary and Andrew Tolmach},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2019/11079},
  URN =		{urn:nbn:de:0030-drops-110794},
  doi =		{10.4230/LIPIcs.ITP.2019.24},
  annote =	{Keywords: interactive theorem proving, top-down parsing}
}

@InProceedings{Barthwal:2009,
author="Barthwal, Aditi
and Norrish, Michael",
editor="Castagna, Giuseppe",
title="Verified, Executable Parsing",
booktitle="Programming Languages and Systems",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="160--174",
isbn="978-3-642-00590-9"
}

@article{Blaudeau:2020,
  author       = {Clement Blaudeau and
                  Natarajan Shankar},
  title        = {A Verified Packrat Parser Interpreter for Parsing Expression Grammars},
  journal      = {CoRR},
  volume       = {abs/2001.04457},
  year         = {2020},
  url          = {https://arxiv.org/abs/2001.04457},
  eprinttype    = {arXiv},
  eprint       = {2001.04457},
  timestamp    = {Fri, 17 Jan 2020 14:07:30 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2001-04457.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{Jourdan:2012,
author="Jourdan, Jacques-Henri
and Pottier, Fran{\c{c}}ois
and Leroy, Xavier",
editor="Seidl, Helmut",
title="Validating LR(1) Parsers",
booktitle="Programming Languages and Systems",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="397--416",
isbn="978-3-642-28869-2"
}

@inproceedings{Lasser:2021,
author = {Lasser, Sam and Casinghino, Chris and Fisher, Kathleen and Roux, Cody},
title = {CoStar: A Verified ALL(*) Parser},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454053},
doi = {10.1145/3453483.3454053},
pages = {420–434},
numpages = {15},
keywords = {interactive theorem proving, parsing},
location = {Virtual, Canada},
series = {PLDI 2021}
}

@article{Koprowski:2011,
  author       = {Adam Koprowski and
                  Henri Binsztok},
  title        = {{TRX:} {A} Formally Verified Parser Interpreter},
  journal      = {Log. Methods Comput. Sci.},
  volume       = {7},
  number       = {2},
  year         = {2011},
  url          = {https://doi.org/10.2168/LMCS-7(2:18)2011},
  doi          = {10.2168/LMCS-7(2:18)2011},
  timestamp    = {Thu, 25 Jun 2020 21:29:06 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1105-2576.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@misc{Obua:2017,
      title={Local Lexing}, 
      author={Steven Obua and Phil Scott and Jacques Fleuriot},
      year={2017},
      eprint={1702.03277},
      archivePrefix={arXiv},
      primaryClass={cs.LO}
}

@article{LocalLexing-AFP,
  author  = {Steven Obua},
  title   = {Local Lexing},
  journal = {Archive of Formal Proofs},
  month   = {April},
  year    = {2017},
  note    = {\url{https://isa-afp.org/entries/LocalLexing.html},
            Formal proof development},
  ISSN    = {2150-914x},
}

% Future Work

@article{Adams:2017,
author = {Adams, Michael and Might, Matthew},
year = {2017},
month = {10},
pages = {1-25},
title = {Restricting grammars with tree automata},
volume = {1},
journal = {Proceedings of the ACM on Programming Languages},
doi = {10.1145/3133906}
}

@InProceedings{Afroozeh:2013,
author="Afroozeh, Ali
and van den Brand, Mark
and Johnstone, Adrian
and Scott, Elizabeth
and Vinju, Jurgen",
editor="Erwig, Martin
and Paige, Richard F.
and Van Wyk, Eric",
title="Safe Specification of Operator Precedence Rules",
booktitle="Software Language Engineering",
year="2013",
publisher="Springer International Publishing",
address="Cham",
pages="137--156",
isbn="978-3-319-02654-1"
}

@inproceedings{Aho:1973,
author = {Aho, A. V. and Johnson, S. C. and Ullman, J. D.},
title = {Deterministic Parsing of Ambiguous Grammars},
year = {1973},
isbn = {9781450373494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/512927.512928},
doi = {10.1145/512927.512928},
pages = {1–21},
numpages = {21},
location = {Boston, Massachusetts},
series = {POPL '73}
}

﻿@Article{Thorup:1996,
author={Thorup, Mikkel},
title={Disambiguating grammars by exclusion of sub-parse trees},
journal={Acta Informatica},
year={1996},
month={Sep},
day={01},
volume={33},
number={6},
pages={511-522},
issn={1432-0525},
doi={10.1007/s002360050055},
url={https://doi.org/10.1007/s002360050055}
}

@article{Thorup:1994,
author = {Thorup, Mikkel},
title = {Controlled Grammatic Ambiguity},
year = {1994},
issue_date = {May 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/177492.177759},
doi = {10.1145/177492.177759},
journal = {ACM Trans. Program. Lang. Syst.},
month = {may},
pages = {1024–1050},
numpages = {27},
keywords = {semantic unambiguity, grammatic ambiguity}
}

@article{Klint:1997,
author = {Klint, Paul and Visser, Eelco},
journal = {},
year = {1997},
month = {04},
pages = {},
title = {Using Filters for the Disambiguation of Context-free Grammars}
}

@InProceedings{Brabrand:2007,
author="Brabrand, Claus
and Giegerich, Robert
and M{\o}ller, Anders",
editor="Holub, Jan
and {\v{Z}}{\v{d}}{\'a}rek, Jan",
title="Analyzing Ambiguity of Context-Free Grammars",
booktitle="Implementation and Application of Automata",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="214--225",
isbn="978-3-540-76336-9"
}

% Introduction

@ARTICLE{Chomsky:1956,
  author={Chomsky, N.},
  journal={IRE Transactions on Information Theory}, 
  title={Three models for the description of language}, 
  year={1956},
  volume={2},
  number={3},
  pages={113-124},
  doi={10.1109/TIT.1956.1056813}
}

@article{Backus:1963,
author = {Backus, J. W. and Bauer, F. L. and Green, J. and Katz, C. and McCarthy, J. and Perlis, A. J. and Rutishauser, H. and Samelson, K. and Vauquois, B. and Wegstein, J. H. and van Wijngaarden, A. and Woodger, M. and Naur, P.},
title = {Revised Report on the Algorithm Language ALGOL 60},
year = {1963},
issue_date = {Jan. 1963},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/366193.366201},
doi = {10.1145/366193.366201},
journal = {Commun. ACM},
month = {jan},
pages = {1–17},
numpages = {17}
}

@article{Irons:1961,
author = {Irons, Edgar T.},
title = {A Syntax Directed Compiler for ALGOL 60},
year = {1961},
issue_date = {Jan. 1961},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/366062.366083},
doi = {10.1145/366062.366083},
journal = {Commun. ACM},
month = {jan},
pages = {51–55},
numpages = {5}
}

@article{Kasami:1969,
author = {Kasami, T. and Torii, K.},
title = {A Syntax-Analysis Procedure for Unambiguous Context-Free Grammars},
year = {1969},
issue_date = {July 1969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {3},
issn = {0004-5411},
url = {https://doi.org/10.1145/321526.321531},
doi = {10.1145/321526.321531},
journal = {J. ACM},
month = {jul},
pages = {423–431},
numpages = {9}
}

@article{Lucas:1961,
url = {https://doi.org/10.1524/itit.1961.3.16.159},
title = {Die Strukturanalyse von Formelübersetzern / Analysis of the structure of formula translators},
title = {},
author = {P. LUCAS},
pages = {159--167},
volume = {3},
number = {1-6},
journal = {it - Information Technology},
doi = {doi:10.1524/itit.1961.3.16.159},
year = {1961},
lastchecked = {2023-06-12}
}

@article{Knuth:1965,
title = {On the translation of languages from left to right},
journal = {Information and Control},
volume = {8},
number = {6},
pages = {607-639},
year = {1965},
issn = {0019-9958},
doi = {https://doi.org/10.1016/S0019-9958(65)90426-2},
url = {https://www.sciencedirect.com/science/article/pii/S0019995865904262},
author = {Donald E. Knuth},
abstract = {There has been much recent interest in languages whose grammar is sufficiently simple that an efficient left-to-right parsing algorithm can be mechanically produced from the grammar. In this paper, we define LR(k) grammars, which are perhaps the most general ones of this type, and they provide the basis for understanding all of the special tricks which have been used in the construction of parsing algorithms for languages with simple structure, e.g. algebraic languages. We give algorithms for deciding if a given grammar satisfies the LR(k) condition, for given k, and also give methods for generating recognizes for LR(k) grammars. It is shown that the problem of whether or not a grammar is LR(k) for some k is undecidable, and the paper concludes by establishing various connections between LR(k) grammars and deterministic languages. In particular, the LR(k) condition is a natural analogue, for grammars, of the deterministic condition, for languages.}
}

@article{Lewis:1968,
author = {Lewis, P. M. and Stearns, R. E.},
title = {Syntax-Directed Transduction},
year = {1968},
issue_date = {July 1968},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {3},
issn = {0004-5411},
url = {https://doi.org/10.1145/321466.321477},
doi = {10.1145/321466.321477},
abstract = {A transduction is a mapping from one set of sequences to another. A syntax-directed transduction is a particular type of transduction which is defined on the grammar of a context-free language and which is meant to be a model of part of the translation process used in many compilers. The transduction is considered from an automata theory viewpoint as specifying the input-output relation of a machine. Special consideration is given to machines called translators which both transduce and recognize. In particular, some special conditions are investigated under which syntax-directed translations can be performed on (deterministic) pushdown machines. In addition, some time bounds for translations on Turing machines are derived.},
journal = {J. ACM},
month = {jul},
pages = {465–488},
numpages = {24}
}

@techreport{DeRemer:1969,
author = {Deremer, F. L.},
title = {PRACTICAL TRANSLATORS FOR LR(K) LANGUAGES},
year = {1969},
publisher = {Massachusetts Institute of Technology},
address = {USA},
abstract = {A context-free syntactical translator (CFST) is a machine which defines a translation from one context-free language to another. A transduction grammar is a formal system based on a context-free grammar and it specifies a context-free syntactical translation. A simple suffix transduction grammar based on a context-free grammar which is LR(k) specifies a translation which can be defined by a deterministic push-down automation (DPDA). A method is presented for automatically constructing CFSTs (DPDAs) from those simple suffix transduction grammars which are based on the LR(k) grammars. The method is developed by first considering grammatical analysis from the string-manipulation viewpoint, then converting the resulting string-manipulation.}
}

@inproceedings{Pratt:1973,
author = {Pratt, Vaughan R.},
title = {Top down Operator Precedence},
year = {1973},
isbn = {9781450373494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/512927.512931},
doi = {10.1145/512927.512931},
booktitle = {Proceedings of the 1st Annual ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
pages = {41–51},
numpages = {11},
location = {Boston, Massachusetts},
series = {POPL '73}
}

@report {Hutton:1996,
	title = {Monadic parser combinators},
	year = {1996},
	institution = {University of Nottingham},
	url = {https://www.cs.nott.ac.uk/~pszgmh/monparsing.pdf},
	author = {Graham Hutton and Erik Meijer}
}

@article{Leo:1991,
title = {A general context-free parsing algorithm running in linear time on every LR(k) grammar without using lookahead},
journal = {Theoretical Computer Science},
volume = {82},
number = {1},
pages = {165-176},
year = {1991},
issn = {0304-3975},
doi = {https://doi.org/10.1016/0304-3975(91)90180-A},
url = {https://www.sciencedirect.com/science/article/pii/030439759190180A},
author = {Joop M.I.M. Leo},
abstract = {A new general context-free parsing algorithm is presented which runs in linear time and space on every LR(k) grammar without using any lookahead and without making use of the LR property. Most of the existing implementations of tabular parsing algorithms, including those using lookahead, can easily be adapted to this new algorithm without a noteworthy loss of efficiency. For some natural right recursive grammars both the time and space complexity will be improved from \<Omega>(n2) to O(n). This makes this algorithm not only of theoretical but probably of practical interest as well.}
}

@inproceedings{Ford:2004,
author = {Ford, Bryan},
title = {Parsing Expression Grammars: A Recognition-Based Syntactic Foundation},
year = {2004},
isbn = {158113729X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/964001.964011},
doi = {10.1145/964001.964011},
abstract = {For decades we have been using Chomsky's generative system of grammars, particularly context-free grammars (CFGs) and regular expressions (REs), to express the syntax of programming languages and protocols. The power of generative grammars to express ambiguity is crucial to their original purpose of modelling natural languages, but this very power makes it unnecessarily difficult both to express and to parse machine-oriented languages using CFGs. Parsing Expression Grammars (PEGs) provide an alternative, recognition-based formal foundation for describing machine-oriented syntax, which solves the ambiguity problem by not introducing ambiguity in the first place. Where CFGs express nondeterministic choice between alternatives, PEGs instead use prioritized choice. PEGs address frequently felt expressiveness limitations of CFGs and REs, simplifying syntax definitions and making it unnecessary to separate their lexical and hierarchical components. A linear-time parser can be built for any PEG, avoiding both the complexity and fickleness of LR parsers and the inefficiency of generalized CFG parsing. While PEGs provide a rich set of operators for constructing grammars, they are reducible to two minimal recognition schemas developed around 1970, TS/TDPL and gTS/GTDPL, which are here proven equivalent in effective recognition power.},
booktitle = {Proceedings of the 31st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {111–122},
numpages = {12},
keywords = {unified grammars, context-free grammars, syntactic predicates, parsing expression grammars, lexical analysis, GTDPL, regular expressions, scannerless parsing, packrat parsing, TDPL, BNF},
location = {Venice, Italy},
series = {POPL '04}
}


@misc{Kegler:2023,
      title={Marpa, A practical general parser: the recognizer}, 
      author={Jeffrey Kegler},
      year={2023},
      eprint={1910.08129},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@inproceedings{Wadler:1995,
  abstract = {{The use of monads to structure functional programs is described. Monads provide a convenient framework for simulating effects found in other languages, such as global state, exception handling, output, or non-determinism. Three case studies are looked at in detail: how monads ease the modification of a simple evaluator; how monads act as the basis of a datatype of arrays subject to in-place update; and how
monads can be used to build parsers.}},
  added-at = {2017-06-29T07:13:07.000+0200},
  address = {London},
  author = {Wadler, Philip},
  biburl = {https://www.bibsonomy.org/bibtex/21e0e56b40f524c38167af27b000d8a9e/gdmcbain},
  booktitle = {Advanced Functional Programming},
  citeulike-article-id = {2104808},
  citeulike-attachment-1 = {wadler_93_monads.pdf; /pdf/user/gdmcbain/article/2104808/1098442/wadler_93_monads.pdf; c6276e7d254afd7d3d1abcb561eed505da822919},
  citeulike-linkout-0 = {http://dx.doi.org/10.1007/3-540-59451-5\_2},
  citeulike-linkout-1 = {http://portal.acm.org/citation.cfm?id=734146},
  comment = {Cited in 'A gentle introduction to Haskell':https://www.haskell.org/tutorial/haskell-tutorial.html\#\$wadler:mffp},
  doi = {10.1007/3-540-59451-5\_2},
  file = {wadler_93_monads.pdf},
  interhash = {ea4b925fdb7f436cf8da5dec5a3d6035},
  intrahash = {1e0e56b40f524c38167af27b000d8a9e},
  isbn = {3-540-59451-5},
  keywords = {68n18-functional-programming-and-lambda-calculus},
  pages = {24--52},
  posted-at = {2017-01-19 04:11:16},
  priority = {4},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  timestamp = {2017-06-29T07:13:07.000+0200},
  title = {{Monads for Functional Programming}},
  url = {http://dx.doi.org/10.1007/3-540-59451-5\_2},
  volume = 925,
  year = 1995
}

@misc{Ford:2006,
      title={Packrat Parsing: Simple, Powerful, Lazy, Linear Time}, 
      author={Bryan Ford},
      year={2006},
      eprint={cs/0603077},
      archivePrefix={arXiv},
      primaryClass={cs.DS}
}


